#ifndef EXECUTIVE_H
#define EXECUTIVE_H
#include <string>
#include <bitset>
class Executive
{
	public:
		Executive();
		~Executive();
		void run();
		void Shift();
		void Keys();
		void IPpermutation();
		bool * XOR(std::bitset<48> Rn, std::bitset<48> Kn);
		void f(std::bitset<32> Rn, std::bitset<32>& Rn1, std::bitset<32>& Ln0, std::bitset<32>& Ln, std::bitset<48> Kn);
		void FinalPerm();
		bool ** Combine(int size, bool * Holder[], bool input0[], bool input1[], bool input2[], bool input3[], bool input4[], bool input5[], bool input6[], bool input7[], bool input8[], bool input9[], bool input10[], bool input11[], bool input12[], bool input13[], bool input14[], bool input15[]);
		bool ** Combine(int size, bool * Holder[], bool input0[], bool input1[], bool input2[], bool input3[], bool input4[], bool input5[], bool input6[], bool input7[], bool input8[], bool input9[], bool input10[], bool input11[], bool input12[], bool input13[], bool input14[], bool input15[], bool input16[]);

	private:
		std::string M, K;
		std::bitset<64> Mbit;
		std::bitset<64> Kbit;
		std::bitset<56> Kplus;
		std::bitset<64> Finalbit;
		bool * Final;
		int PC1[8][7]={{57,49,41,33,25,17,9},{1,58,50,42,34,26,18},{10,2,59,51,43,35,27},{19,11,3,60,52,44,36},{63,55,47,39,31,23,15},{7,62,54,46,38,30,22},{14,6,61,53,45,37,29},{21,13,5,28,20,12,4}};
		int PC2[8][6]={{14,17,11,24,1,5},{3,28,15,6,21,10},{23,19,12,4,26,8},{16,7,27,20,13,2},{41,52,31,37,47,55},{30,40,51,45,33,48},{44,49,39,56,34,53},{46,42,50,36,29,32}};
		int ETable[8][6]={{32,1,2,3,4,5},{4,5,6,7,8,9},{8,9,10,11,12,13},{12,13,14,15,16,17},{16,17,18,19,20,21},{20,21,22,23,24,25},{24,25,26,27,28,29},{28,29,30,31,32,1}};
		int S1[4][16]={{14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7},{0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8},{4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0},{15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13}};
		int S2[4][16]={{15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10},{3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5},{0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15},{13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9}};
		int S3[4][16]={{10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8},{13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1},{13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7},{1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12}};
		int S4[4][16]={{7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15},{13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9},{10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4},{3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14}};
		int S5[4][16]={{2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9},{14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6},{4,2,11,11,10,13,7,8,15,9,12,5,6,3,0,14},{11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3}};
		int S6[4][16]={{12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11},{10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8},{9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6},{4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13}};
		int S7[4][16]={{4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1},{13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6},{1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2},{6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12}};
		int S8[4][16]={{13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7},{1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2},{7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8},{2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11}};
		int P[8][4]={{16,7,20,21},{29,12,28,17},{1,15,23,26},{5,18,31,10},{2,8,24,14},{32,27,3,9},{19,13,30,6},{22,11,4,25}};
		bool C0[28], C1[28], C2[28], C3[28], C4[28], C5[28], C6[28], C7[28], C8[28], C9[28], C10[28], C11[28], C12[28], C13[28], C14[28], C15[28], C16[28];
		bool D0[28], D1[28], D2[28], D3[28], D4[28], D5[28], D6[28], D7[28], D8[28], D9[28], D10[28], D11[28], D12[28], D13[28], D14[28], D15[28], D16[28];
		std::bitset<48> K1, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11, K12, K13, K14, K15, K16;
		int IP[8][8]={{58,50,42,34,26,18,10,2},{60,52,44,36,28,20,12,4},{62,54,46,38,30,22,14,6},{64,56,48,40,32,24,16,8},{57,49,41,33,25,17,9,1},{59,51,43,35,27,19,11,3},{61,53,45,37,29,21,13,5},{63,55,47,39,31,23,15,7}};
		int IPFin[8][8]={{40,8,48,16,56,24,64,32},{39,7,47,15,55,23,63,31},{38,6,46,14,54,22,62,30},{37,5,45,13,53,21,61,29},{36,4,44,12,52,20,60,28},{35,3,43,11,51,19,59,27},{34,2,42,10,50,18,58,26},{33,1,41,9,49,17,57,25}};
		bool IPbit[64];
		std::bitset<32> L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17;
		std::bitset<32> R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15, R16;
};
#endif
